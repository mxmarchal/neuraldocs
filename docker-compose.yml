version: "3.8"
services:
  mongodb:
    image: mongo:6.0
    restart: always
    volumes:
      - mongo_data:/data/db
    # Expose MongoDB on host port 27018 to avoid conflicts
    ports:
      - "27018:27017"
  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
  chromadb:
    image: chromadb/chroma:latest
    restart: always
    volumes:
      - chroma_data:/chroma/chroma.db
    # Expose ChromaDB on host port 8001 to avoid conflicts
    ports:
      - "8001:8000"
  api:
    build:
      context: .
      dockerfile: app/Dockerfile
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./app:/app
    environment:
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8000
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - EMBEDDING_MODEL_NAME=all-MiniLM-L6-v2
      - NANO_MODEL_NAME=gpt-4.1-nano
      - RAG_MODEL_NAME=gpt-4.1-nano
    ports:
      - "8000:8000"
    depends_on:
      - mongodb
      - redis
      - chromadb
  worker:
    build:
      context: .
      dockerfile: app/Dockerfile
    command: rq worker --url redis://redis:6379
    volumes:
      - ./app:/app
    environment:
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8000
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - EMBEDDING_MODEL_NAME=all-MiniLM-L6-v2
      - NANO_MODEL_NAME=gpt-4.1-nano
    depends_on:
      - mongodb
      - redis
      - chromadb
volumes:
  mongo_data:
  chroma_data:
